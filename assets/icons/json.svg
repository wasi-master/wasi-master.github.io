<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->
<svg xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:cc="http://creativecommons.org/ns#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="160" height="160" id="svg-001">
  <title id="title-001">JSON logo</title>
  <defs id="gradients-001">
    <linearGradient id="linearGradient8385">
      <stop id="stop8387" style="stop-color:#000000;stop-opacity:1" offset="0"/>
      <stop id="stop8389" style="stop-color:#ffffff;stop-opacity:1" offset="1"/>
    </linearGradient>
    <linearGradient x1="-553.26971" y1="525.90778" x2="-666.11639" y2="413.0452" id="linearGradient3002" xlink:href="#linearGradient8385" gradientUnits="userSpaceOnUse" gradientTransform="matrix(0.99884,0,0,0.998699,689.00774,-388.84375)"/>
    <linearGradient x1="-666.11664" y1="413.04492" x2="-553.2699" y2="525.90759" id="linearGradient3005" xlink:href="#linearGradient8385" gradientUnits="userSpaceOnUse" gradientTransform="matrix(0.99884,0,0,0.998699,689.00774,-388.84375)"/>
  </defs>
  <metadata id="metadata-json-logo">
    <rdf:RDF>
      <cc:Work rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage"/>
        <dc:title>JSON logo</dc:title>
        <dc:date>2011-09-05 22:42:49</dc:date>
        <dc:creator>
          <cc:Agent>
            <dc:title>fzap</dc:title>
          </cc:Agent>
        </dc:creator>
        <cc:license rdf:resource="http://creativecommons.org/licenses/publicdomain/"/>
        <dc:rights>
          <cc:Agent>
            <dc:title>PD</dc:title>
          </cc:Agent>
        </dc:rights>
        <dc:publisher>
          <cc:Agent>
            <dc:title>openclipart.org</dc:title>
          </cc:Agent>
        </dc:publisher>
        <dc:description>JSON-Logo adapted from the JSON-Website: http://json.org</dc:description>
        <dc:language>en_GB</dc:language>
        <dc:subject>
          <rdf:Bag>
            <rdf:li>json</rdf:li>
            <rdf:li>logo</rdf:li>
          </rdf:Bag>
        </dc:subject>
      </cc:Work>
      <cc:License rdf:about="http://creativecommons.org/licenses/publicdomain/">
        <cc:permits rdf:resource="http://creativecommons.org/ns#Reproduction"/>
        <cc:permits rdf:resource="http://creativecommons.org/ns#Distribution"/>
        <cc:permits rdf:resource="http://creativecommons.org/ns#DerivativeWorks"/>
      </cc:License>
    </rdf:RDF>
  </metadata>
  <path d="m 79.8646,119.09957 c 35.39768,48.25534 70.03957,-13.46852 69.98868,-50.58675 C 149.79308,24.62677 105.31237,0.09913 79.8356,0.09913 38.94318,0.09913 0,33.89521 0,80.13502 c 0,51.396 44.64038,79.86497 79.8356,79.86497 -7.96447,-1.14675 -34.5062,-6.83395 -34.86292,-67.96677 -0.23987,-41.3466 13.48757,-57.86551 34.80527,-50.59905 0.47743,0.17707 23.51392,9.26451 23.51392,38.95053 0,29.55992 -23.42727,38.71487 -23.42727,38.71487 z" id="path7508" style="color:#000000;fill:url(#linearGradient3005);fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.5;marker:none;visibility:visible;display:inline;overflow:visible"/>
  <path d="M 79.82327,41.40081 C 56.43322,33.33893 27.78025,52.61662 27.78025,91.22962 c 0,63.04798 46.72055,68.77037 52.38416,68.77037 C 121.05683,159.99999 160,126.20391 160,79.9641 160,28.5681 115.35962,0.09913 80.16441,0.09913 c 9.74811,-1.35 52.54087,10.54991 52.54087,69.0368 0,38.14117 -31.95286,58.90496 -52.73547,50.03344 -0.47743,-0.17707 -23.51392,-9.26451 -23.51392,-38.95053 0,-29.55992 23.36738,-38.81803 23.36738,-38.81803 z" id="path7510" style="color:#000000;fill:url(#linearGradient3002);fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.5;marker:none;visibility:visible;display:inline;overflow:visible"/>
<div xmlns="" id="divScriptsUsed" style="display: none"/><script xmlns="" id="globalVarsDetection" src="moz-extension://0eba29e6-3f5e-4e1a-a3f1-9bdb2e9adfb9/js/wrs_env.js"/><script xmlns="">(function (data) {
  var core = {
    "log": false,
    "hostname": function (url) {
      if ("blob:" === url.substring(0, 5)) {
        url = url.replace("blob:", '');
        url = unescape(url);
      }
      //
      var match = url.match(/:\/\/(www[0-9]?\.)?(.[^/:]+)/i);
      var flag = (match !== null) &amp;&amp; (match.length &gt; 2) &amp;&amp; (typeof match[2] === "string") &amp;&amp; (match[2].length &gt; 0);
      return flag ? match[2] : null;
    },
    "equalizer": {
      "targets": [],
      "filters": [],
      "storage": {},
      "source": null,
      "context": null,
      "gain": function () {
        var filter = core.equalizer.context.createGain();
        filter.channelCountMode = "explicit";
        filter.gain.value = 1;
        return filter;
      },
      "biquad": function (e) {
        var filter = core.equalizer.context.createBiquadFilter();
        filter.type = e.type || core.equalizer.storage.FT.LOWPASS;
        filter.frequency.value = e.f || 0;
        filter.gain.value = e.gain || 0;
        filter.Q.value = 1;
        return filter;
      },
      "set": function (o) {
        if (o) {
          if (o.eq &amp;&amp; o.ch) {
            if (core.equalizer.filters.length &gt; 0) {
              if (core.equalizer.filters[0]) {
                core.equalizer.filters[0].channelCount = o.ch.mono ? 1 : (core.equalizer.filters[0]._defaultChannelCount ? core.equalizer.filters[0]._defaultChannelCount : 2);
                core.equalizer.filters.forEach(function (f, i) {
                  f.gain.value = o.eq[i].gain;
                });
              }
            }
          }
        }
      },
      "toggle": function (state) {
        if (state) core.equalizer.storage.state = state;
        //
        if (core.equalizer.source &amp;&amp; core.equalizer.context) {
          if (core.equalizer.filters &amp;&amp; core.equalizer.filters.length) {
            if (core.equalizer.storage.state === "ON") {
              core.equalizer.source.disconnect(core.equalizer.context.destination);
              core.equalizer.source.connect(core.equalizer.filters[0]);
            }
            //
            if (core.equalizer.storage.state === "OFF") {
              core.equalizer.source.disconnect(core.equalizer.filters[0]);
              core.equalizer.source.connect(core.equalizer.context.destination);
            }
          }
        }
      },
      "load": function () {
        if (core.log) console.error(" &gt;&gt; Searching for video/audio elements...");
        core.equalizer.filters = [];
        delete core.equalizer.context;
        //
        core.equalizer.context = new AudioContext();
        for (var i = 0; i &lt; core.equalizer.storage.eq.length; i++) {
          var node = core.equalizer.storage.eq[i];
          var filter = node.f ? core.equalizer.biquad(node) : core.equalizer.gain();
          if (filter) {
            core.equalizer.filters.push(filter);
          }
        }
        //
        if (core.log) console.error(" &gt;&gt; Equalizer is loaded!");
        core.equalizer.attach(2);
      },
      "attach": function (w) {
        if (!core.equalizer.context) core.equalizer.load();
        else {
          core.equalizer.targets.forEach(function (t, k) {
            if (t.getAttribute("equalizer-state") !== "attached") {
              var src = t.src ? t.src : t.currentSrc;
              if (src) {
                t.setAttribute("equalizer-state", "attached");
                if (core.log) console.error(" &gt;&gt; Equalizer is attached, loc", w, t.className);
                if (document.location.hostname !== core.hostname(src)) {
                  var crossorigin = t.getAttribute("crossorigin");
                  if (!crossorigin) {
                    if (src.substring(0, 5) !== "blob:") {
                      t.setAttribute("crossorigin", (crossorigin ? crossorigin : "anonymous"));
                      if (t.src) t.src = t.src + '';
                      else if (t.currentSrc) t.load();
                    }
                  }
                }
                //
                try {
                  core.equalizer.source = core.equalizer.context.createMediaElementSource(t);
                  core.equalizer.filters[0]._defaultChannelCount = core.equalizer.source.channelCount ? core.equalizer.source.channelCount : 2;
                  var target = core.equalizer.storage.state === "OFF" ? core.equalizer.context.destination : core.equalizer.filters[0];
                  core.equalizer.source.connect(target);
                  //
                  for (var i = 0; i &lt; core.equalizer.filters.length; i++) {
                    var current = core.equalizer.filters[i];
                    var next = core.equalizer.filters[i + 1];
                    //
                    current.gain.value = core.equalizer.storage.eq[i].gain;
                    if (next) current.connect(next);
                  }
                  //
                  var last = core.equalizer.filters[core.equalizer.filters.length - 1];
                  last.connect(core.equalizer.context.destination);
                  window.top.postMessage({"app": "audio-equalizer", "action": "app-icon-normal"}, '*');
                } catch (e) {
                  window.top.postMessage({"app": "audio-equalizer", "action": "app-icon-error"}, '*');
                }
              }
            }
          });
        }
      }
    }
  };
  //
  core.equalizer.storage = data;
  //
  window.addEventListener("play", function (e) {
    core.equalizer.targets.push(e.target);
    core.equalizer.attach(0);
  }, true);
  //
  window.addEventListener("message", function (e) {
    if (e.data.app === "audio-equalizer") {
      if (e.data.action === "app-set") core.equalizer.set(e.data.value);
      if (e.data.action === "app-toggle") core.equalizer.toggle(e.data.state);
    }
  }, false);
  //
  if (Audio) {
    if (Audio.prototype) {
      if (Audio.prototype.play) {
        const play = Audio.prototype.play;
        Audio.prototype.play = function () {
          core.equalizer.targets.push(this);
          core.equalizer.attach(1);
          //
          return play.apply(this, arguments);
        };
      }
    }
  }
})({"ch":{"snap":false,"mono":false},"eq":[{"label":"master","gain":1},{"label":"64","f":64,"gain":"-12","type":"peaking"},{"label":"32","f":32,"gain":"-9.05","type":"lowshelf"},{"label":"125","f":125,"gain":"-5.72","type":"peaking"},{"label":"250","f":250,"gain":0,"type":"peaking"},{"label":"500","f":500,"gain":0,"type":"peaking"},{"label":"1k","f":1000,"gain":0,"type":"peaking"},{"label":"2k","f":2000,"gain":0,"type":"peaking"},{"label":"4k","f":4000,"gain":0,"type":"peaking"},{"label":"8k","f":8000,"gain":0,"type":"peaking"},{"label":"16k","f":16000,"gain":0,"type":"highshelf"}],"presets":[{"name":"Club","default":true,"gains":[0,0,4.8,3.36,3.36,3.36,1.92,0,0,0]},{"name":"Live","default":true,"gains":[-2.88,0,2.4,3.36,3.36,3.36,2.4,1.44,1.44,1.44]},{"name":"Party","default":true,"gains":[4.32,4.32,0,0,0,0,0,0,4.32,4.32]},{"name":"Pop","default":true,"gains":[0.96,2.88,4.32,4.8,3.36,0,-1.44,-1.44,0.96,0.96]},{"name":"Soft","default":true,"gains":[2.88,0.96,0,-1.44,0,2.4,4.8,5.76,6.72,7.2]},{"name":"Ska","default":true,"gains":[-1.44,-2.88,-2.4,0,2.4,3.36,5.28,5.76,6.72,5.76]},{"name":"Reggae","default":true,"gains":[0,0,0,-3.36,0,3.84,3.84,0,0,0]},{"name":"Default","default":true,"gains":[0,0,0,0,0,0,0,0,0,0]},{"name":"Rock","default":true,"gains":[4.8,2.88,-3.36,-4.8,-1.92,2.4,5.28,6.72,6.72,6.72]},{"name":"Dance","default":true,"gains":[5.76,4.32,1.44,0,0,-3.36,-4.32,-4.32,0,0]},{"name":"Techno","default":true,"gains":[4.8,3.36,0,-3.36,-2.88,0,4.8,5.76,5.76,5.28]},{"name":"Headphones","default":true,"gains":[2.88,6.72,3.36,-1.92,-1.44,0.96,2.88,5.76,7.68,8.64]},{"name":"Soft rock","default":true,"gains":[2.4,2.4,1.44,0,-2.4,-3.36,-1.92,0,1.44,5.28]},{"name":"Classical","default":true,"gains":[0,0,0,0,0,0,-4.32,-4.32,-4.32,-5.76]},{"name":"Large Hall","default":true,"gains":[6.24,6.24,3.36,3.36,0,-2.88,-2.88,-2.88,0,0]},{"name":"Full Bass","default":true,"gains":[4.8,5.76,5.76,3.36,0.96,-2.4,-4.8,-6.24,-6.72,-6.72]},{"name":"Full Treble","default":true,"gains":[-5.76,-5.76,-5.76,-2.4,1.44,6.72,9.6,9.6,9.6,10.08]},{"name":"Laptop Speakers","default":true,"gains":[2.88,6.72,3.36,-1.92,-1.44,0.96,2.88,5.76,7.68,8.64]},{"name":"Full Bass &amp; Treble","default":true,"gains":[4.32,3.36,0,-4.32,-2.88,0.96,4.8,6.72,7.2,7.2]}],"selected":{"name":"Default","default":true,"gains":[0,0,0,0,0,0,0,0,0,0]},"whitelist":[]})</script></svg>